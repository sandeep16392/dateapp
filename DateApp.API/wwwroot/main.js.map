{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/config/CommonConfig.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/member/member-card/member-card.component.css","webpack:///./src/app/member/member-card/member-card.component.html","webpack:///./src/app/member/member-card/member-card.component.ts","webpack:///./src/app/member/member-detail/member-detail.component.css","webpack:///./src/app/member/member-detail/member-detail.component.html","webpack:///./src/app/member/member-detail/member-detail.component.ts","webpack:///./src/app/member/member-edit/member-edit.component.css","webpack:///./src/app/member/member-edit/member-edit.component.html","webpack:///./src/app/member/member-edit/member-edit.component.ts","webpack:///./src/app/member/member-list/member-list.component.css","webpack:///./src/app/member/member-list/member-list.component.html","webpack:///./src/app/member/member-list/member-list.component.ts","webpack:///./src/app/member/member-messages/member-messages.component.css","webpack:///./src/app/member/member-messages/member-messages.component.html","webpack:///./src/app/member/member-messages/member-messages.component.ts","webpack:///./src/app/member/photo-editor/photo-editor.component.css","webpack:///./src/app/member/photo-editor/photo-editor.component.html","webpack:///./src/app/member/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/models/pagination.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/resolver/lists.resolver.ts","webpack:///./src/app/resolver/memberdetail.resolver.ts","webpack:///./src/app/resolver/memberedit.resolver.ts","webpack:///./src/app/resolver/memberlist.resolver.ts","webpack:///./src/app/resolver/messages.resolver.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alertify.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/error.interceptor.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/validators/custom-validators.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthService } from './services/auth.service';\nimport { User } from './models/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { RouterModule } from '@angular/router';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\nimport { AlertifyService } from './services/alertify.service';\nimport { MemberListComponent } from './member/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MemberCardComponent } from './member/member-card/member-card.component';\nimport { MemberDetailComponent } from './member/member-detail/member-detail.component';\n\nimport { environment } from 'src/environments/environment';\nimport { MemberDetailResolver } from './resolver/memberdetail.resolver';\nimport { MemberListResolver } from './resolver/memberlist.resolver';\nimport { MemberEditComponent } from './member/member-edit/member-edit.component';\nimport { MemberEditResolver } from './resolver/memberedit.resolver';\nimport { PreventUnsavedChangesGuard } from './guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './member/photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { ListsResolver } from './resolver/lists.resolver';\nimport { MessagesResolver } from './resolver/messages.resolver';\nimport { MemberMessagesComponent } from './member/member-messages/member-messages.component';\n\nimport * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'https://9ee19f4da1bb41ea85f68eaca429ca42@sentry.io/1838241'\n});\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n};\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      RegisterComponent,\n      HomeComponent,\n      MemberListComponent,\n      MessagesComponent,\n      ListsComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      NgxGalleryModule,\n      FileUploadModule,\n      BsDropdownModule.forRoot(),\n      RouterModule.forRoot(appRoutes, {useHash: true}),\n      TabsModule.forRoot(),\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: tokenGetter,\n            whitelistedDomains: environment.whiteListedDomain,\n            blacklistedRoutes: environment.blacklistDomain\n         }\n      }),\n      BsDatepickerModule.forRoot(),\n      PaginationModule.forRoot(),\n      ButtonsModule.forRoot()\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChangesGuard,\n      ListsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","export class CommonConfig {\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private alertify: AlertifyService,\n    private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You are not authorized to access');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { MemberEditComponent } from '../member/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChangesGuard\r\n  implements CanDeactivate<MemberEditComponent> {\r\n  canDeactivate(component: MemberEditComponent) {\r\n    if (component.editForm.dirty) {\r\n      return confirm(\r\n        'Are you sure you want to continue? Any unsaved changes would be lost.'\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div style=\\\"text-align: center\\\" *ngIf=\\\"!registerMode\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container\\\" *ngIf=\\\"registerMode\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  values: any;\n  constructor(private http: HttpClient, private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    const isLoggedIn =  this.authService.loggedIn();\n    if (isLoggedIn)\n    {\n      this.router.navigate(['/members']);\n    }\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likeParams === 'liker' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likeParams\\\" btnRadio=\\\"liker\\\" (click)=\\\"loadUsers()\\\">Members who like\\n        me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likeParams\\\" btnRadio=\\\"likee\\\" (click)=\\\"loadUsers()\\\">Members who I\\n        like</button>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/User';\nimport { Pagination, PaginationResult } from '../models/pagination';\nimport { AuthService } from '../services/auth.service';\nimport { UserService } from '../services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likeParams: string;\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likeParams = 'liker';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        null,\n        this.likeParams\n      )\n      .subscribe(\n        (res: PaginationResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \".card:hover img{\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    -webkit-transition-duration: 500ms;\\r\\n            transition-duration: 500ms;\\r\\n    -webkit-transition-timing-function: ease-out;\\r\\n            transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img{\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    -webkit-transition-duration: 500ms;\\r\\n            transition-duration: 500ms;\\r\\n    -webkit-transition-timing-function: ease-out;\\r\\n            transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper{\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons{\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons{\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate{\\r\\n    -webkit-transition: all 0.3s ease-in-out;\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img src=\\\"{{user.photoUrl || '../../../../../assets/default.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike()\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\"><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\n    {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/User';\nimport { UserService } from 'src/app/services/user.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n  constructor(private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike() {\n    this.userService.sendLike(this.authService.decodedToken.nameid, this.user.id).subscribe((resp) => {\n      this.alertify.success('You Liked!');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".img-thumbnail{\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer{\\r\\n    padding:10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img src=\\\"{{user.photoUrl || '../../../../../assets/default.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive| timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created| date:'dd/MM/yyyy'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\" (click)=\\\"sendLike()\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/models/User';\nimport { UserService } from 'src/app/services/user.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation\n} from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.route.queryParams.subscribe(query => {\n      const selectTab = query['tab'];\n      this.memberTabs.tabs[selectTab > 0 ? selectTab : 0].active = true;\n    });\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imgUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imgUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imgUrls;\n  }\n\n  sendLike() {\n    this.userService.sendLike(this.authService.decodedToken.nameid, this.user.id).subscribe((resp) => {\n      this.alertify.success('You Liked!');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  selectTab(id: number){\n    this.memberTabs.tabs[id].active = true;\n  }\n}\n","module.exports = \".img-thumbnail{\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer{\\r\\n    padding:10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"alert alert-info\\\" *ngIf=\\\"editForm.dirty\\\">\\n        <strong>Information: </strong>You have made changes. Any unsaved changes will be lost!\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img src=\\\"{{photoUrl || '../../../../../assets/default.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive| date:'dd/MM/yyyy'}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created| date:'dd/MM/yyyy'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n            <button class=\\\"btn btn-success btn-block\\\" form=\\\"editForm\\\" [disabled]=\\\"!editForm.dirty\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\" action=\\\"\\\">\\n              <h4>Description</h4>\\n              <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <h4>Looking For</h4>\\n              <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n              <h4>Interests</h4>\\n              <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\">Country</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/models/User';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  user: User;\n  photoUrl: string;\n  @ViewChild('editForm') editForm: NgForm;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.alertify.success('Profile Updated!');\n      this.editForm.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center\\\">\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n\\n<div class=\\\"container mt-3\\\">\\n  <div class=\\\"row\\\">\\n    <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"minAge\\\" class=\\\"mr-1\\\">Age From</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"userParams.minAge\\\" class=\\\"form-control mr-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\"\\n          name=\\\"minAge\\\">\\n      </div>\\n\\n      <div class=\\\"form-group \\\">\\n        <label for=\\\"maxAge\\\" class=\\\"mr-1\\\">Age To</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"userParams.maxAge\\\" class=\\\"form-control mr-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\n          name=\\\"maxAge\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"gender\\\" class=\\\"mr-1\\\">Show: </label>\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"userParams.gender\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" name=\\\"gender\\\">\\n          <option *ngFor=\\\"let gender of genderList\\\" value=\\\"{{gender.value}}\\\">\\n            {{gender.display}}\\n          </option>\\n        </select>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">Reset Filter</button>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"btn-group float-right\\\">\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" (click)=\\\"loadUsers()\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" (click)=\\\"loadUsers()\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/User';\nimport { UserService } from '../../services/user.service';\nimport { AlertifyService } from '../../services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult } from 'src/app/models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' }\n  ];\n  userParams: any = {};\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.userParams\n      )\n      .subscribe(\n        (res: PaginationResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \".card {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    overflow-y: scroll;\\r\\n    height: 400px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>No messages yet... say hi by using message box below.</p>\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId === recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId !== recipientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n              </small>\\n              <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" \\n        [(ngModel)]=\\\"newMessage.content\\\"\\n        name=\\\"content\\\"\\n        required\\n        class=\\\"form-control input-sm\\\" \\n        placeholder=\\\"send a private message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/User';\nimport { Message } from 'src/app/models/message';\nimport { UserService } from 'src/app/services/user.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (\n              !messages[i].isRead &&\n              messages[i].recipientId === currentUserId\n            ) {\n              this.userService.markAsRead(messages[i].id, currentUserId);\n            }\n          }\n        })\n      )\n      .subscribe(\n        messages => {\n          this.messages = messages;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService\n      .sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe(\n        (msg: Message) => {\n          this.messages.unshift(msg);\n          this.newMessage.content = '';\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \"img.img-thumbnail{\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over{\\r\\n    border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file]{\\r\\n    color: transparent; \\r\\n}\\r\\n\\r\\n.button-margin {\\r\\n    margin-top: 3%;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"\\\" class=\\\"img-thumbnail p-1\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" (click)=\\\"setMainPhoto(photo)\\\"\\n        [ngClass]=\\\"photo.isMain ? 'btn-success active': 'btn-secondary'\\\" [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePhoto(photo)\\\"><i\\n          class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n\\n  <div class=\\\"col-md-3\\\">\\n\\n    <h3>Add Photos</h3>\\n\\n    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\n      [uploader]=\\\"uploader\\\" class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n      <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n      Drop Photos Here\\n    </div>\\n\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple /><br />\\n\\n    Single\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n    <h3>Upload queue</h3>\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Name</th>\\n          <th>Size</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td><strong>{{ item?.file?.name }}</strong></td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div class>\\n        Queue progress:\\n        <div class=\\\"progress\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\"\\n        [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"fa fa-upload\\\"></span> Upload\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"uploader.cancelAll()\\\"\\n        [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"fa fa-ban\\\"></span> Cancel\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\"\\n        [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"fa fa-trash\\\"></span> Remove\\n      </button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from 'src/app/models/Photo';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  baseUrl = environment.baseUrl;\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  currentMain: Photo;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'api/users/' +\n        this.authService.decodedToken.nameid +\n        '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, header) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        if (photo.isMain) {\n          photo.isMain = true;\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        }\n        this.photos.push(photo);\n      }\n    };\n  }\n\n  deletePhoto(photo: Photo) {\n\n    this.alertify.confirm('Are you sure you want to delete the photo?', ()=> {\n      this.userService\n      .deletePhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.photos = this.photos.filter(p => p.id !== photo.id);\n          this.alertify.success('Photo has been deleted.');\n        },\n        error => {\n          this.alertify.error('Failed to delete photo.');\n        }\n      );\n    });\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService\n      .setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n          this.currentMain.isMain = false;\n          photo.isMain = true;\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \"table {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle {\\r\\n    max-height: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"btn-group\\\">\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-envelope\\\"></i> Unread\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n        </button>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n      <h3>No messages</h3>\\n    </div>\\n  \\n    <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 40%\\\">Message</th>\\n          <th style=\\\"width: 20%\\\">From / To</th>\\n          <th style=\\\"width: 20%\\\">Sent / Received</th>\\n          <th style=\\\"width: 20%\\\"></th>\\n        </tr>\\n        <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n          <td>{{message.content}}</td>\\n          <td>\\n            <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                  <img src={{message?.senderPhotoUrl}} class=\\\"mr-1 img-circle rounded-circle\\\">\\n                  <strong>{{message.senderKnownAs}}</strong>\\n            </div>\\n            <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                  <img src={{message?.recipientPhotoUrl}} class=\\\"mr-1 img-circle rounded-circle\\\">\\n                  <strong>{{message.recipientKnownAs}}</strong>\\n            </div>\\n          </td>\\n          <td>{{message.messageSent | timeAgo}}</td>\\n          <td>\\n            <button class=\\\"btn btn-danger\\\" (click) = \\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </table>\\n  \\n    </div>\\n  \\n  </div>\\n\\n  <div class=\\\"d-flex justify-content-center\\\">\\n      <pagination [boundaryLinks]=\\\"true\\\" \\n                  [totalItems]=\\\"pagination.totalItems\\\"\\n                  [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                  [(ngModel)]=\\\"pagination.currentPage\\\"\\n                  (pageChanged)=\\\"pageChanged($event)\\\"\\n                previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n    </pagination>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../models/message';\nimport { Pagination, PaginationResult } from '../models/pagination';\nimport { UserService } from '../services/user.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer: string = 'Unread';\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService\n      .getMessages(\n        this.authService.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.messageContainer\n      )\n      .subscribe(\n        (res: PaginationResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm(\n      'Are you sure you want to delete this message?',\n      () => {\n        this.userService\n          .deleteMessage(id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.messages = this.messages.filter(m=>m.id !== id);\n              this.messages.slice(this.messages.findIndex(m => m.id === id), 1);\n              this.alertify.success('Message has been deleted.');\n            },\n            error => {\n              this.alertify.error('Failed to delete message.');\n            }\n          );\n      }\n    );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}\n","export interface Pagination {\n  currentPage: number;\n  totalPages: number;\n  itemsPerPage: number;\n  totalItems: number;\n}\n\nexport class PaginationResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","module.exports = \".dropdown-toggle, .dropdown-item{\\r\\n    cursor: pointer\\r\\n}\\r\\n\\r\\nimg{\\r\\n    max-height: 50px;\\r\\n    border: 2px solid white;\\r\\n    display: inline;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Connect2Date</a>\\n\\n      <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"loggedIn()\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\" >Lists</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\" >Messages</a>\\n        </li>\\n      </ul>\\n    \\n      <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n        <span class=\\\"mr-1\\\">\\n          <img src=\\\"{{photoUrl || '../../../../assets/default.png'}}\\\" alt=\\\"\\\">\\n        </span>\\n        <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n          Welcome {{authService.decodedToken.unique_name | titlecase}}\\n        </a>\\n    \\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\"><i class=\\\"fa fa-user mr-2\\\"></i>Edit Profile</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out mr-2\\\"></i>Logout</a>\\n        </div>\\n      </div>\\n    \\n      <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n        <input #userRef class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" required\\n          [(ngModel)]=\\\"model.username\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" required\\n          [(ngModel)]=\\\"model.password\\\">\\n        <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n      </form>\\n  </div>\\n</nav>\"","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit, AfterViewInit {\n  model = {username: '', password: ''};\n  photoUrl: string;\n  @ViewChild('userRef') userEltRef: ElementRef;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService,\n    private route: Router) {}\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  ngAfterViewInit(){\n    this.userEltRef.nativeElement.focus();\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      next => {\n        this.alertify.success('Logged In!');\n      },\n      error => {\n        this.alertify.error(error);\n      }, () => {\n        this.route.navigate(['/members']);\n      }    );\n  }\n\n  loggedIn() {\n\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    this.authService.currentUser = null;\n    this.authService.decodedToken = null;\n    this.alertify.message('Logged Out!');\n    this.route.navigate(['/home']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n    <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n    <hr>\\n  \\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n    </div>\\n  \\n    <div class=\\\"form-group text-center\\\">\\n      <button class=\\\"btn btn-success mr-2\\\" type=\\\"submit\\\">Register</button>\\n      <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n    \\n  </form> -->\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors \\n      && registerForm.get('username').touched}\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('username').hasError('required') \\n      && registerForm.get('username').touched\\\">Please choose a Username</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('username').hasError('minlength') \\n      && registerForm.get('username').touched\\\">Username must be at least 7 characters</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('username').hasError('maxlength') \\n      && registerForm.get('username').touched\\\">Username cannot exceed 15 characters</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is\\n      required</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of\\n      Birth is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is\\n      required</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors \\n    && registerForm.get('password').touched}\\\" type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') \\n    && registerForm.get('password').touched\\\">Please choose a Password</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') \\n    && registerForm.get('password').touched\\\">Password must be at least 7 characters</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') \\n    && registerForm.get('password').touched\\\">Password cannot exceed 15 characters</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors && \\n    registerForm.get('confirmPassword').touched || \\n    registerForm.get('confirmPassword').touched &&\\n    registerForm.hasError('mismatch')}\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Confirm Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') \\n    && registerForm.get('confirmPassword').touched\\\">Please enter password again</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('mismatch') \\n    && registerForm.get('confirmPassword').touched\\\">Passwords do not match</div>\\n  </div>\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success mr-2\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Register</button>\\n    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { UserForRegistration } from '../models/UserForRegistration';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { CustomValidators } from '../validators/custom-validators';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../models/User';\nimport { Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  bsConfig: Partial<BsDatepickerConfig>;\n  user: User;\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  customValidator = new CustomValidators();\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group(\n      {\n        gender: ['male'],\n        username: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(7),\n            Validators.maxLength(15)\n          ]\n        ],\n        knownAs: ['', Validators.required],\n        dateOfBirth: [null, Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(7),\n            Validators.maxLength(15)\n          ]\n        ],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: this.customValidator.passwordMatchCheck\n      }\n    );\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(\n        () => {\n          this.alertify.success('Registration Successful!');\n        },\n        error => {\n          this.alertify.error(error);\n        },\n        () => {\n          this.authService.login(this.user).subscribe(() => {\n            this.router.navigate(['/members']);\n          });\n        }\n      );\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../models/User';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertifyService } from '../services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likeParams = 'liker';\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likeParams).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../models/User';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertifyService } from '../services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../models/User';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertifyService } from '../services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../models/User';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertifyService } from '../services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertifyService } from '../services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../models/message';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  messageContainer = 'Unread';\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService\r\n      .getMessages(\r\n        this.authService.decodedToken.nameid,\r\n        this.pageNumber,\r\n        this.pageSize,\r\n        this.messageContainer\r\n      )\r\n      .pipe(\r\n        catchError(error => {\r\n          this.alertify.error('Problem retrieving messages');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './member/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { MemberDetailComponent } from './member/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './resolver/memberdetail.resolver';\r\nimport { MemberListResolver } from './resolver/memberlist.resolver';\r\nimport { MemberEditComponent } from './member/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './resolver/memberedit.resolver';\r\nimport { PreventUnsavedChangesGuard } from './guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './resolver/lists.resolver';\r\nimport { MessagesResolver } from './resolver/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'members',\r\n        component: MemberListComponent,\r\n        resolve: { users: MemberListResolver }\r\n      },\r\n      {\r\n        path: 'members/:id',\r\n        component: MemberDetailComponent,\r\n        resolve: { user: MemberDetailResolver }\r\n      },\r\n      {\r\n        path: 'member/edit',\r\n        component: MemberEditComponent,\r\n        resolve: { user: MemberEditResolver },\r\n        canDeactivate: [PreventUnsavedChangesGuard]\r\n      },\r\n      {\r\n        path: 'messages',\r\n        component: MessagesComponent,\r\n        resolve: { messages: MessagesResolver }\r\n      },\r\n      {\r\n        path: 'lists',\r\n        component: ListsComponent,\r\n        resolve: { users: ListsResolver }\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallBack();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n  error(message: string) {\n    alertify.error(message);\n  }\n  message(message: string) {\n    alertify.message(message);\n  }\n  warning(message: string) {\n    alertify.warning(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonConfig } from '../config/CommonConfig';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  config: CommonConfig;\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject('../../assets/default.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.config = new CommonConfig();\n  }\n\n  changeMemberPhoto(photoUrl) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http\n      .post(environment.baseUrl + environment.loginUrl, model)\n      .pipe(\n        map((resp: any) => {\n          const user = resp;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            localStorage.setItem('user', JSON.stringify(user.user));\n            this.currentUser = user.user;\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n            this.currentUser.photoUrl = this.currentUser.photoUrl ? this.currentUser.photoUrl : '../../assets/default.png';\n            this.changeMemberPhoto(this.currentUser.photoUrl);\n          }\n        })\n      );\n  }\n\n  register(model: User) {\n    return this.http.post(environment.baseUrl + environment.registerUrl, model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Injectable, isDevMode } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as Sentry from '@sentry/browser';\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        // if (!isDevMode()) {\r\n        // const eventId = Sentry.captureException(error.originalError || error);\r\n        // }\r\n        if (error instanceof HttpErrorResponse) {\r\n          const appError = error.headers.get('Application-Error');\r\n          if (appError) {\r\n            console.log(appError);\r\n            return throwError(appError);\r\n          }\r\n\r\n          const serverError = error.error;\r\n          let modelError = null;\r\n          if (serverError.status === 401) {\r\n            return throwError({\r\n              status: serverError.status,\r\n              errorText: serverError.title\r\n            });\r\n          }\r\n          if (serverError && serverError.status === 400) {\r\n            modelError = serverError.errors;\r\n          }\r\n          return throwError(modelError || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\nimport { environment } from 'src/environments/environment';\nimport { PaginationResult } from '../models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  getUsers(\n    page?,\n    itemsPerPage?,\n    userParams?,\n    likeParams?\n  ): Observable<PaginationResult<User[]>> {\n    const paginatedResult: PaginationResult<User[]> = new PaginationResult<\n      User[]\n    >();\n\n    let params = new HttpParams();\n    if (page && itemsPerPage) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likeParams === 'liker') {\n      params = params.append('liker', 'true');\n    }\n\n    if (likeParams === 'likee') {\n      params = params.append('likee', 'true');\n    }\n\n    return this.http\n      .get<any>(environment.baseUrl + 'api/users', {\n        observe: 'response',\n        params\n      })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body.users;\n          paginatedResult.pagination = response.body.pagination;\n          // if (response.headers.get('Pagination')) {\n          //   paginatedResult.pagination = JSON.parse(\n          //     response.headers.get('Pagination')\n          //   );\n          // }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(environment.baseUrl + 'api/users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(environment.baseUrl + 'api/users/' + id, user);\n  }\n\n  setMainPhoto(userid: number, id: number) {\n    return this.http.post(\n      environment.baseUrl +\n        'api/users/' +\n        userid +\n        '/photos/' +\n        id +\n        '/setmain',\n      {}\n    );\n  }\n\n  deletePhoto(userid: number, id: number) {\n    return this.http.delete(\n      environment.baseUrl + 'api/Users/' + userid + '/photos/' + id\n    );\n  }\n\n  sendLike(userid: number, recepientId: number) {\n    return this.http.post(\n      environment.baseUrl + 'api/users/' + userid + '/like/' + recepientId,\n      {}\n    );\n  }\n\n  getMessages(\n    id: number,\n    page?,\n    itemsPerPage?,\n    messageContainer?\n  ): Observable<PaginationResult<Message[]>> {\n    const paginatedResult: PaginationResult<Message[]> = new PaginationResult<\n      Message[]\n    >();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page && itemsPerPage) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http\n      .get<any>(environment.baseUrl + 'api/users/' + id + '/messages', {\n        observe: 'response',\n        params\n      })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body.messages;\n          paginatedResult.pagination = response.body.pagination;\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(userId: number, recipientId: number) {\n    return this.http.get<Message[]>(\n      environment.baseUrl +\n        'api/users/' +\n        userId +\n        '/messages/thread/' +\n        recipientId\n    );\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(\n      environment.baseUrl +\n        'api/users/' +\n        id +\n        '/messages',\n        message\n    );\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(\n      environment.baseUrl +\n        'api/users/' +\n        userId +\n        '/messages/' + id,\n        {}\n    );\n  }\n\n  markAsRead(msgId: number, userId: number) {\n    return this.http.post(\n      environment.baseUrl +\n        'api/users/' +\n        userId +\n        '/messages/' + msgId + '/read',\n        {}\n    ).subscribe();\n  }\n}\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n    passwordMatchCheck(g: FormGroup) {\r\n        return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  blacklistDomain: ['[::]:5001/api/Auth'],\n  whiteListedDomain: ['[::]:5001'],\n  production: false,\n  baseUrl : '/',\n  loginUrl : 'api/Auth/login',\n  registerUrl : 'api/Auth/register'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}